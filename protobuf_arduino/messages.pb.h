/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.5 at Mon Feb 22 16:12:35 2016. */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Simple {
    int32_t lucky_number;
    char message[40];
/* @@protoc_insertion_point(struct:Simple) */
} Simple;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Simple_init_default                      {0, ""}
#define Simple_init_zero                         {0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define Simple_lucky_number_tag                  1
#define Simple_message_tag                       2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Simple_fields[3];

/* Maximum encoded size of messages (where known) */
#define Simple_size                              53

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGES_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
